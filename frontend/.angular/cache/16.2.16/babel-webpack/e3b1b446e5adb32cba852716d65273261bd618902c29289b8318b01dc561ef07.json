{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ServiceService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8000/services';\n  }\n  getAuthHeaders() {\n    const token = localStorage.getItem('access_token');\n    return new HttpHeaders({\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    });\n  }\n  getAll() {\n    return this.http.get(this.apiUrl);\n  }\n  getById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  create(service) {\n    return this.http.post(this.apiUrl, service, {\n      headers: this.getAuthHeaders()\n    });\n  }\n  update(id, service) {\n    return this.http.put(`${this.apiUrl}/${id}`, service, {\n      headers: this.getAuthHeaders()\n    });\n  }\n  delete(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`, {\n      headers: this.getAuthHeaders()\n    });\n  }\n  static {\n    this.ɵfac = function ServiceService_Factory(t) {\n      return new (t || ServiceService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ServiceService,\n      factory: ServiceService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpHeaders","ServiceService","constructor","http","apiUrl","getAuthHeaders","token","localStorage","getItem","getAll","get","getById","id","create","service","post","headers","update","put","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/app/src/app/services/service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface Service {\r\n  id_service?: number;\r\n  name: string;\r\n  description: string;\r\n  duration_minutes: number;\r\n  price: number;\r\n  state: boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceService {\r\n  private apiUrl = 'http://localhost:8000/services';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  private getAuthHeaders(): HttpHeaders {\r\n    const token = localStorage.getItem('access_token');\r\n    return new HttpHeaders({\r\n      'Authorization': `Bearer ${token}`,\r\n      'Content-Type': 'application/json'\r\n    });\r\n  }\r\n\r\n  getAll(): Observable<Service[]> {\r\n    return this.http.get<Service[]>(this.apiUrl);\r\n  }\r\n\r\n  getById(id: number): Observable<Service> {\r\n    return this.http.get<Service>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  create(service: Service): Observable<any> {\r\n    return this.http.post(this.apiUrl, service, { headers: this.getAuthHeaders() });\r\n  }\r\n\r\n  update(id: number, service: Service): Observable<any> {\r\n    return this.http.put(`${this.apiUrl}/${id}`, service, { headers: this.getAuthHeaders() });\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/${id}`, { headers: this.getAuthHeaders() });\r\n  }\r\n}"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAe9D,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,gCAAgC;EAEV;EAE/BC,cAAcA,CAAA;IACpB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAClD,OAAO,IAAIR,WAAW,CAAC;MACrB,eAAe,EAAE,UAAUM,KAAK,EAAE;MAClC,cAAc,EAAE;KACjB,CAAC;EACJ;EAEAG,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAY,IAAI,CAACN,MAAM,CAAC;EAC9C;EAEAO,OAAOA,CAACC,EAAU;IAChB,OAAO,IAAI,CAACT,IAAI,CAACO,GAAG,CAAU,GAAG,IAAI,CAACN,MAAM,IAAIQ,EAAE,EAAE,CAAC;EACvD;EAEAC,MAAMA,CAACC,OAAgB;IACrB,OAAO,IAAI,CAACX,IAAI,CAACY,IAAI,CAAC,IAAI,CAACX,MAAM,EAAEU,OAAO,EAAE;MAAEE,OAAO,EAAE,IAAI,CAACX,cAAc;IAAE,CAAE,CAAC;EACjF;EAEAY,MAAMA,CAACL,EAAU,EAAEE,OAAgB;IACjC,OAAO,IAAI,CAACX,IAAI,CAACe,GAAG,CAAC,GAAG,IAAI,CAACd,MAAM,IAAIQ,EAAE,EAAE,EAAEE,OAAO,EAAE;MAAEE,OAAO,EAAE,IAAI,CAACX,cAAc;IAAE,CAAE,CAAC;EAC3F;EAEAc,MAAMA,CAACP,EAAU;IACf,OAAO,IAAI,CAACT,IAAI,CAACgB,MAAM,CAAC,GAAG,IAAI,CAACf,MAAM,IAAIQ,EAAE,EAAE,EAAE;MAAEI,OAAO,EAAE,IAAI,CAACX,cAAc;IAAE,CAAE,CAAC;EACrF;;;uBA/BWJ,cAAc,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdtB,cAAc;MAAAuB,OAAA,EAAdvB,cAAc,CAAAwB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}