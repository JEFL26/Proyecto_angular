{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n// Importar componentes\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\n// Importar servicios y guards\nimport { AuthService } from './services/auth.service';\nimport { AuthGuard } from './guards/auth.guard';\nimport { DashboardComponent } from './components/admin/dashboard/dashboard.component';\nimport { ServicesComponent } from './components/admin/services/services.component';\nimport { ServiceFormComponent } from './components/admin/service-form/service-form.component';\nimport * as i0 from \"@angular/core\";\n/**\n * Módulo principal de la aplicación\n *\n * - declarations: Componentes, directivas y pipes que pertenecen a este módulo\n * - imports: Otros módulos que necesitamos\n * - providers: Servicios que estarán disponibles en toda la app\n * - bootstrap: Componente raíz que inicia la aplicación\n */\nexport class AppModule {\n  static {\n    this.ɵfac = function AppModule_Factory(t) {\n      return new (t || AppModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppModule,\n      bootstrap: [AppComponent]\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      providers: [AuthService, AuthGuard // Guard de protección de rutas\n      ],\n      imports: [BrowserModule, AppRoutingModule, HttpClientModule, FormsModule // Para usar [(ngModel)] en formularios\n      ]\n    });\n  }\n}\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent, HomeComponent, LoginComponent, RegisterComponent, DashboardComponent, ServicesComponent, ServiceFormComponent],\n    imports: [BrowserModule, AppRoutingModule, HttpClientModule, FormsModule // Para usar [(ngModel)] en formularios\n    ]\n  });\n})();","map":{"version":3,"names":["BrowserModule","HttpClientModule","FormsModule","AppRoutingModule","AppComponent","HomeComponent","LoginComponent","RegisterComponent","AuthService","AuthGuard","DashboardComponent","ServicesComponent","ServiceFormComponent","AppModule","bootstrap","imports","declarations"],"sources":["/home/feliban26/estudio_angular/proyecto_reservas/frontend/src/app/app.module.ts"],"sourcesContent":["// frontend/src/app/app.module.ts\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n// Importar componentes\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\n\n// Importar servicios y guards\nimport { AuthService } from './services/auth.service';\nimport { AuthGuard } from './guards/auth.guard';\nimport { DashboardComponent } from './components/admin/dashboard/dashboard.component';\nimport { ServicesComponent } from './components/admin/services/services.component';\nimport { ServiceFormComponent } from './components/admin/service-form/service-form.component';\n\n/**\n * Módulo principal de la aplicación\n * \n * - declarations: Componentes, directivas y pipes que pertenecen a este módulo\n * - imports: Otros módulos que necesitamos\n * - providers: Servicios que estarán disponibles en toda la app\n * - bootstrap: Componente raíz que inicia la aplicación\n */\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    RegisterComponent,\n    DashboardComponent,\n    ServicesComponent,\n    ServiceFormComponent\n  ],\n  imports: [\n    BrowserModule,           // Módulo esencial para apps de navegador\n    AppRoutingModule,        // Módulo de rutas\n    HttpClientModule,        // Para hacer peticiones HTTP\n    FormsModule              // Para usar [(ngModel)] en formularios\n  ],\n  providers: [\n    AuthService,             // Servicio de autenticación\n    AuthGuard                // Guard de protección de rutas\n  ],\n  bootstrap: [AppComponent]  // Componente inicial\n})\nexport class AppModule { }"],"mappings":"AAEA,SAASA,aAAa,QAAQ,2BAA2B;AACzD,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAE9C;AACA,SAASC,aAAa,QAAQ,kCAAkC;AAChE,SAASC,cAAc,QAAQ,oCAAoC;AACnE,SAASC,iBAAiB,QAAQ,0CAA0C;AAE5E;AACA,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,kBAAkB,QAAQ,kDAAkD;AACrF,SAASC,iBAAiB,QAAQ,gDAAgD;AAClF,SAASC,oBAAoB,QAAQ,wDAAwD;;AAE7F;;;;;;;;AA8BA,OAAM,MAAOC,SAAS;;;uBAATA,SAAS;IAAA;EAAA;;;YAATA,SAAS;MAAAC,SAAA,GAFRV,YAAY;IAAA;EAAA;;;iBAJb,CACTI,WAAW,EACXC,SAAS,CAAgB;MAAA,CAC1B;MAAAM,OAAA,GARCf,aAAa,EACbG,gBAAgB,EAChBF,gBAAgB,EAChBC,WAAW,CAAc;MAAA;;;;;;2EAQhBW,SAAS;IAAAG,YAAA,GApBlBZ,YAAY,EACZC,aAAa,EACbC,cAAc,EACdC,iBAAiB,EACjBG,kBAAkB,EAClBC,iBAAiB,EACjBC,oBAAoB;IAAAG,OAAA,GAGpBf,aAAa,EACbG,gBAAgB,EAChBF,gBAAgB,EAChBC,WAAW,CAAc;IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}