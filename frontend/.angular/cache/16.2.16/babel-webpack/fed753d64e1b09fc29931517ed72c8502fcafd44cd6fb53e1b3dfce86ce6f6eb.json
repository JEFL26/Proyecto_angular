{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { DashboardComponent } from './components/admin/dashboard/dashboard.component';\nimport { ServicesComponent } from './components/admin/services/services.component';\nimport { ServiceFormComponent } from './components/admin/service-form/service-form.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\n/**\n * Definición de rutas de la aplicación\n *\n * - '': Ruta vacía (raíz), redirige al home\n * - 'home': Página principal\n * - 'login': Página de inicio de sesión\n * - 'register': Página de registro\n *\n * Puedes agregar \"canActivate: [AuthGuard]\" a cualquier ruta\n * para protegerla y requerir autenticación\n */\nconst routes = [{\n  path: '',\n  redirectTo: '/home',\n  pathMatch: 'full'\n}, {\n  path: 'home',\n  component: HomeComponent\n}, {\n  path: 'login',\n  component: LoginComponent\n}, {\n  path: 'register',\n  component: RegisterComponent\n},\n// Panel admin (solo accesible con token)\n{\n  path: 'admin',\n  component: DashboardComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'admin/services',\n  component: ServicesComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'admin/services/new',\n  component: ServiceFormComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'admin/services/edit/:id',\n  component: ServiceFormComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'admin',\n  component: DashboardComponent,\n  canActivate: [AuthGuard],\n  children: [{\n    path: 'services',\n    component: ServicesComponent\n  }, {\n    path: 'services/new',\n    component: ServiceFormComponent\n  }, {\n    path: 'services/edit/:id',\n    component: ServiceFormComponent\n  }, {\n    path: '',\n    redirectTo: 'services',\n    pathMatch: 'full'\n  }]\n}, {\n  path: '**',\n  redirectTo: '/home'\n}];\nexport class AppRoutingModule {\n  static {\n    this.ɵfac = function AppRoutingModule_Factory(t) {\n      return new (t || AppRoutingModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppRoutingModule\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [RouterModule.forRoot(routes), RouterModule]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","HomeComponent","LoginComponent","RegisterComponent","DashboardComponent","ServicesComponent","ServiceFormComponent","AuthGuard","routes","path","redirectTo","pathMatch","component","canActivate","children","AppRoutingModule","forRoot","imports","i1","exports"],"sources":["/home/feliban26/estudio_angular/proyecto_reservas/frontend/src/app/app-routing.module.ts"],"sourcesContent":["// frontend/src/app/app-routing.module.ts\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { DashboardComponent } from './components/admin/dashboard/dashboard.component';\nimport { ServicesComponent } from './components/admin/services/services.component';\nimport { ServiceFormComponent } from './components/admin/service-form/service-form.component';\nimport { AuthGuard } from './guards/auth.guard';\n\n/**\n * Definición de rutas de la aplicación\n * \n * - '': Ruta vacía (raíz), redirige al home\n * - 'home': Página principal\n * - 'login': Página de inicio de sesión\n * - 'register': Página de registro\n * \n * Puedes agregar \"canActivate: [AuthGuard]\" a cualquier ruta\n * para protegerla y requerir autenticación\n */\nconst routes: Routes = [\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n\n  // Panel admin (solo accesible con token)\n  { path: 'admin', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'admin/services', component: ServicesComponent, canActivate: [AuthGuard] },\n  { path: 'admin/services/new', component: ServiceFormComponent, canActivate: [AuthGuard] },\n  { path: 'admin/services/edit/:id', component: ServiceFormComponent, canActivate: [AuthGuard] },\n  { \n    path: 'admin', \n    component: DashboardComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: 'services', component: ServicesComponent },\n      { path: 'services/new', component: ServiceFormComponent },\n      { path: 'services/edit/:id', component: ServiceFormComponent },\n      { path: '', redirectTo: 'services', pathMatch: 'full' }\n    ]\n  },\n  { path: '**', redirectTo: '/home' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n"],"mappings":"AAEA,SAASA,YAAY,QAAgB,iBAAiB;AACtD,SAASC,aAAa,QAAQ,kCAAkC;AAChE,SAASC,cAAc,QAAQ,oCAAoC;AACnE,SAASC,iBAAiB,QAAQ,0CAA0C;AAC5E,SAASC,kBAAkB,QAAQ,kDAAkD;AACrF,SAASC,iBAAiB,QAAQ,gDAAgD;AAClF,SAASC,oBAAoB,QAAQ,wDAAwD;AAC7F,SAASC,SAAS,QAAQ,qBAAqB;;;AAE/C;;;;;;;;;;;AAWA,MAAMC,MAAM,GAAW,CACrB;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE,OAAO;EAAEC,SAAS,EAAE;AAAM,CAAE,EACpD;EAAEF,IAAI,EAAE,MAAM;EAAEG,SAAS,EAAEX;AAAa,CAAE,EAC1C;EAAEQ,IAAI,EAAE,OAAO;EAAEG,SAAS,EAAEV;AAAc,CAAE,EAC5C;EAAEO,IAAI,EAAE,UAAU;EAAEG,SAAS,EAAET;AAAiB,CAAE;AAElD;AACA;EAAEM,IAAI,EAAE,OAAO;EAAEG,SAAS,EAAER,kBAAkB;EAAES,WAAW,EAAE,CAACN,SAAS;AAAC,CAAE,EAC1E;EAAEE,IAAI,EAAE,gBAAgB;EAAEG,SAAS,EAAEP,iBAAiB;EAAEQ,WAAW,EAAE,CAACN,SAAS;AAAC,CAAE,EAClF;EAAEE,IAAI,EAAE,oBAAoB;EAAEG,SAAS,EAAEN,oBAAoB;EAAEO,WAAW,EAAE,CAACN,SAAS;AAAC,CAAE,EACzF;EAAEE,IAAI,EAAE,yBAAyB;EAAEG,SAAS,EAAEN,oBAAoB;EAAEO,WAAW,EAAE,CAACN,SAAS;AAAC,CAAE,EAC9F;EACEE,IAAI,EAAE,OAAO;EACbG,SAAS,EAAER,kBAAkB;EAC7BS,WAAW,EAAE,CAACN,SAAS,CAAC;EACxBO,QAAQ,EAAE,CACR;IAAEL,IAAI,EAAE,UAAU;IAAEG,SAAS,EAAEP;EAAiB,CAAE,EAClD;IAAEI,IAAI,EAAE,cAAc;IAAEG,SAAS,EAAEN;EAAoB,CAAE,EACzD;IAAEG,IAAI,EAAE,mBAAmB;IAAEG,SAAS,EAAEN;EAAoB,CAAE,EAC9D;IAAEG,IAAI,EAAE,EAAE;IAAEC,UAAU,EAAE,UAAU;IAAEC,SAAS,EAAE;EAAM,CAAE;CAE1D,EACD;EAAEF,IAAI,EAAE,IAAI;EAAEC,UAAU,EAAE;AAAO,CAAE,CACpC;AAMD,OAAM,MAAOK,gBAAgB;;;uBAAhBA,gBAAgB;IAAA;EAAA;;;YAAhBA;IAAgB;EAAA;;;gBAHjBf,YAAY,CAACgB,OAAO,CAACR,MAAM,CAAC,EAC5BR,YAAY;IAAA;EAAA;;;2EAEXe,gBAAgB;IAAAE,OAAA,GAAAC,EAAA,CAAAlB,YAAA;IAAAmB,OAAA,GAFjBnB,YAAY;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}