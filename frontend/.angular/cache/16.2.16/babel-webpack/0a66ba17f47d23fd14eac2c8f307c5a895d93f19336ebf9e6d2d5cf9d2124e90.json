{"ast":null,"code":"import { __decorate } from \"tslib\";\nservice;\nimport { Component } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nexport let ServicesComponent = class ServicesComponent {\n  constructor(serviceService, router, http) {\n    this.serviceService = serviceService;\n    this.router = router;\n    this.http = http;\n    this.services = [];\n    this.loading = false;\n    this.error = '';\n    // Nuevas propiedades\n    this.selectedFile = null;\n    this.uploading = false;\n    this.uploadResult = null;\n  }\n  ngOnInit() {\n    this.fetchServices();\n  }\n  fetchServices() {\n    this.loading = true;\n    this.serviceService.getAll().subscribe({\n      next: data => {\n        this.services = data;\n        this.loading = false;\n      },\n      error: () => {\n        this.error = 'Error al cargar los servicios';\n        this.loading = false;\n      }\n    });\n  }\n  editService(id) {\n    this.router.navigate(['/admin/services/edit', id]);\n  }\n  deleteService(id) {\n    if (confirm('¿Seguro que quieres eliminar este servicio?')) {\n      this.serviceService.delete(id).subscribe({\n        next: () => this.fetchServices(),\n        error: () => alert('Error al eliminar el servicio')\n      });\n    }\n  }\n  createService() {\n    this.router.navigate(['/admin/services/new']);\n  }\n  back() {\n    this.router.navigate(['/admin']);\n  }\n  // --- Nueva lógica de carga de Excel ---\n  onFileSelected(event) {\n    const file = event.target.files[0];\n    if (!file) return;\n    // Validación simple de tamaño (igual que backend)\n    if (file.size > 1024) {\n      alert('El archivo supera 1 KB, el servidor lo rechazará.');\n      return;\n    }\n    this.selectedFile = file;\n  }\n  uploadFile() {\n    if (!this.selectedFile) return;\n    this.uploading = true;\n    this.uploadResult = null;\n    const formData = new FormData();\n    formData.append('file', this.selectedFile);\n    const token = localStorage.getItem('access_token');\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${token}`\n    });\n    this.http.post('http://localhost:8000/upload/excel', formData, {\n      headers\n    }).subscribe({\n      next: res => {\n        this.uploadResult = res;\n        this.uploading = false;\n        this.fetchServices();\n      },\n      error: err => {\n        this.uploadResult = err.error;\n        this.uploading = false;\n      }\n    });\n  }\n};\nServicesComponent = __decorate([Component({\n  selector: 'app-services',\n  templateUrl: './services.component.html',\n  styleUrls: ['./services.component.css']\n})], ServicesComponent);","map":{"version":3,"names":["service","Component","HttpHeaders","ServicesComponent","constructor","serviceService","router","http","services","loading","error","selectedFile","uploading","uploadResult","ngOnInit","fetchServices","getAll","subscribe","next","data","editService","id","navigate","deleteService","confirm","delete","alert","createService","back","onFileSelected","event","file","target","files","size","uploadFile","formData","FormData","append","token","localStorage","getItem","headers","Authorization","post","res","err","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/feliban26/estudio_angular/proyecto_reservas/frontend/src/app/services/service.service.ts"],"sourcesContent":["service\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ServiceService, Service } from '../../../services/service.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-services',\r\n  templateUrl: './services.component.html',\r\n  styleUrls: ['./services.component.css']\r\n})\r\nexport class ServicesComponent implements OnInit {\r\n  services: Service[] = [];\r\n  loading = false;\r\n  error = '';\r\n\r\n  // Nuevas propiedades\r\n  selectedFile: File | null = null;\r\n  uploading = false;\r\n  uploadResult: any = null;\r\n\r\n  constructor(\r\n    private serviceService: ServiceService,\r\n    private router: Router,\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.fetchServices();\r\n  }\r\n\r\n  fetchServices(): void {\r\n    this.loading = true;\r\n    this.serviceService.getAll().subscribe({\r\n      next: data => {\r\n        this.services = data;\r\n        this.loading = false;\r\n      },\r\n      error: () => {\r\n        this.error = 'Error al cargar los servicios';\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  editService(id: number): void {\r\n    this.router.navigate(['/admin/services/edit', id]);\r\n  }\r\n\r\n  deleteService(id: number): void {\r\n    if (confirm('¿Seguro que quieres eliminar este servicio?')) {\r\n      this.serviceService.delete(id).subscribe({\r\n        next: () => this.fetchServices(),\r\n        error: () => alert('Error al eliminar el servicio')\r\n      });\r\n    }\r\n  }\r\n\r\n  createService(): void {\r\n    this.router.navigate(['/admin/services/new']);\r\n  }\r\n\r\n  back(): void {\r\n    this.router.navigate(['/admin']);\r\n  }\r\n\r\n  // --- Nueva lógica de carga de Excel ---\r\n  onFileSelected(event: any): void {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    // Validación simple de tamaño (igual que backend)\r\n    if (file.size > 1024) {\r\n      alert('El archivo supera 1 KB, el servidor lo rechazará.');\r\n      return;\r\n    }\r\n\r\n    this.selectedFile = file;\r\n  }\r\n\r\n  uploadFile(): void {\r\n    if (!this.selectedFile) return;\r\n\r\n    this.uploading = true;\r\n    this.uploadResult = null;\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', this.selectedFile);\r\n\r\n    const token = localStorage.getItem('access_token');\r\n    const headers = new HttpHeaders({\r\n      Authorization: `Bearer ${token}`\r\n    });\r\n\r\n    this.http.post('http://localhost:8000/upload/excel', formData, { headers })\r\n      .subscribe({\r\n        next: res => {\r\n          this.uploadResult = res;\r\n          this.uploading = false;\r\n          this.fetchServices();\r\n        },\r\n        error: err => {\r\n          this.uploadResult = err.error;\r\n          this.uploading = false;\r\n        }\r\n      });\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}