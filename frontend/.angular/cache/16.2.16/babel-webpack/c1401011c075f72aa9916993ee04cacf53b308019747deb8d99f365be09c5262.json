{"ast":null,"code":"import { __decorate } from \"tslib\";\n// frontend/src/app/components/home/home.component.ts\nimport { Component } from '@angular/core';\nexport let HomeComponent = class HomeComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.isAuthenticated = false;\n  }\n  ngOnInit() {\n    // Suscribirse al estado de autenticación\n    this.authService.isAuthenticated$.subscribe(isAuth => this.isAuthenticated = isAuth);\n  }\n  /**\n   * Navega al login\n   */\n  goToLogin() {\n    this.router.navigate(['/login']);\n  }\n  /**\n   * Navega al registro\n   */\n  goToRegister() {\n    this.router.navigate(['/register']);\n  }\n  /**\n   * Cierra sesión\n   */\n  logout() {\n    this.authService.logout();\n    // Opcional: mostrar mensaje de éxito\n    alert('Sesión cerrada exitosamente');\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})], HomeComponent);","map":{"version":3,"names":["Component","HomeComponent","constructor","authService","router","isAuthenticated","ngOnInit","isAuthenticated$","subscribe","isAuth","goToLogin","navigate","goToRegister","logout","alert","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/feliban26/estudio_angular/proyecto_reservas/frontend/src/app/components/home/home.component.ts"],"sourcesContent":["// frontend/src/app/components/home/home.component.ts\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  isAuthenticated = false;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // Suscribirse al estado de autenticación\r\n    this.authService.isAuthenticated$.subscribe(\r\n      isAuth => this.isAuthenticated = isAuth\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Navega al login\r\n   */\r\n  goToLogin(): void {\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  /**\r\n   * Navega al registro\r\n   */\r\n  goToRegister(): void {\r\n    this.router.navigate(['/register']);\r\n  }\r\n\r\n  /**\r\n   * Cierra sesión\r\n   */\r\n  logout(): void {\r\n    this.authService.logout();\r\n    // Opcional: mostrar mensaje de éxito\r\n    alert('Sesión cerrada exitosamente');\r\n  }\r\n}"],"mappings":";AAAA;AACA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,aAAa,GAAnB,MAAMA,aAAa;EAGxBC,YACUC,WAAwB,EACxBC,MAAc;IADd,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IAJhB,KAAAC,eAAe,GAAG,KAAK;EAKpB;EAEHC,QAAQA,CAAA;IACN;IACA,IAAI,CAACH,WAAW,CAACI,gBAAgB,CAACC,SAAS,CACzCC,MAAM,IAAI,IAAI,CAACJ,eAAe,GAAGI,MAAM,CACxC;EACH;EAEA;;;EAGAC,SAASA,CAAA;IACP,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEA;;;EAGAC,YAAYA,CAAA;IACV,IAAI,CAACR,MAAM,CAACO,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;EACrC;EAEA;;;EAGAE,MAAMA,CAAA;IACJ,IAAI,CAACV,WAAW,CAACU,MAAM,EAAE;IACzB;IACAC,KAAK,CAAC,6BAA6B,CAAC;EACtC;CACD;AArCYb,aAAa,GAAAc,UAAA,EALzBf,SAAS,CAAC;EACTgB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWjB,aAAa,CAqCzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}